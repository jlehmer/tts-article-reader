name: TTS Article Reader CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  app-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm run build --if-present
      - run: npm test

  infra-build:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './terraform'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Run build so Terraform plan (for lambda build) succeeds
      - run: npm i
      - run: npm run build --if-present
      - run: npm run lint:check
      - run: npm run format:check

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var="article_extract_api_key=${{ secrets.EXTRACT_API_KEY }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
